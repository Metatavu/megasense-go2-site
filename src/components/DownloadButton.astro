---
import { Image } from "astro:assets";

type Props = {
  title: string;
  icon?: ImageMetadata;
  dense?: boolean;
  className?: string;
  altText?: string;
};

const { title, icon, className, dense, altText } = Astro.props;

---

<download-button>
  <a
    class="download-button rounded-full bg-go2-blue text-[#fff] flex flex-row gap-2 md:hover:cursor-pointer"
    class:list={[
      dense ? "px-4 h-6" : "px-6 py-3 uppercase",
      className,
    ]}
  >
    {title}
    {icon && <Image src={icon} alt={altText || ""}/>}
    </a>
</download-button>

<script>
  class DownloadButton extends HTMLElement {
    constructor() {
      super();

      const button = this.querySelector(".download-button");

      button?.addEventListener("click", () => {
        redirectAppStore();
      });

      /**
       * Redirects to device specific app store
       */
      const redirectAppStore = () => {
        const isAppleDevice = /iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent);
        const isAndroid = /Android|Linux/i.test(navigator.userAgent);

        if (isAppleDevice) {
          window.open("https://apps.apple.com/us/app/go2/id1665099325", "_blank");
        } else if (isAndroid) {
          window.open("https://play.google.com/store/apps/details?id=com.megasense.go2", "_blank");
        }
        // TODO: Add default condition
      }
    }
  }
  customElements.define("download-button", DownloadButton);
</script>
